// Code generated by a tool. DO NOT EDIT.

// Package syscall provides a mockable wrapper for syscall.
package syscall

import (
	syscall "syscall"
)

var _ Interface = &Impl{}
var _ = syscall.Accept

type Interface interface {
	Accept(fd int) (nfd int, sa syscall.Sockaddr, err error)
	Accept4(fd int, flags int) (nfd int, sa syscall.Sockaddr, err error)
	Access(path string, mode uint32) (err error)
	Acct(path string) (err error)
	Adjtimex(buf *syscall.Timex) (state int, err error)
	AllThreadsSyscall(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)
	AllThreadsSyscall6(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)
	AttachLsf(fd int, i []syscall.SockFilter) error
	Bind(fd int, sa syscall.Sockaddr) (err error)
	BindToDevice(fd int, device string) (err error)
	BytePtrFromString(s string) (*byte, error)
	ByteSliceFromString(s string) ([]byte, error)
	Chdir(path string) (err error)
	Chmod(path string, mode uint32) (err error)
	Chown(path string, uid int, gid int) (err error)
	Chroot(path string) (err error)
	Clearenv()
	Close(fd int) (err error)
	CloseOnExec(fd int)
	CmsgLen(datalen int) int
	CmsgSpace(datalen int) int
	Connect(fd int, sa syscall.Sockaddr) (err error)
	Creat(path string, mode uint32) (fd int, err error)
	DetachLsf(fd int) error
	Dup(oldfd int) (fd int, err error)
	Dup2(oldfd int, newfd int) (err error)
	Dup3(oldfd int, newfd int, flags int) (err error)
	Environ() []string
	EpollCreate(size int) (fd int, err error)
	EpollCreate1(flag int) (fd int, err error)
	EpollCtl(epfd int, op int, fd int, event *syscall.EpollEvent) (err error)
	EpollWait(epfd int, events []syscall.EpollEvent, msec int) (n int, err error)
	Exec(argv0 string, argv []string, envv []string) (err error)
	Exit(code int)
	Faccessat(dirfd int, path string, mode uint32, flags int) (err error)
	Fallocate(fd int, mode uint32, off int64, len int64) (err error)
	Fchdir(fd int) (err error)
	Fchmod(fd int, mode uint32) (err error)
	Fchmodat(dirfd int, path string, mode uint32, flags int) (err error)
	Fchown(fd int, uid int, gid int) (err error)
	Fchownat(dirfd int, path string, uid int, gid int, flags int) (err error)
	FcntlFlock(fd uintptr, cmd int, lk *syscall.Flock_t) error
	Fdatasync(fd int) (err error)
	Flock(fd int, how int) (err error)
	ForkExec(argv0 string, argv []string, attr *syscall.ProcAttr) (pid int, err error)
	Fstat(fd int, stat *syscall.Stat_t) (err error)
	Fstatfs(fd int, buf *syscall.Statfs_t) (err error)
	Fsync(fd int) (err error)
	Ftruncate(fd int, length int64) (err error)
	Futimes(fd int, tv []syscall.Timeval) (err error)
	Futimesat(dirfd int, path string, tv []syscall.Timeval) (err error)
	Getcwd(buf []byte) (n int, err error)
	Getdents(fd int, buf []byte) (n int, err error)
	Getegid() (egid int)
	Getenv(key string) (value string, found bool)
	Geteuid() (euid int)
	Getgid() (gid int)
	Getgroups() (gids []int, err error)
	Getpagesize() int
	Getpeername(fd int) (sa syscall.Sockaddr, err error)
	Getpgid(pid int) (pgid int, err error)
	Getpgrp() (pid int)
	Getpid() (pid int)
	Getppid() (ppid int)
	Getpriority(which int, who int) (prio int, err error)
	Getrlimit(resource int, rlim *syscall.Rlimit) (err error)
	Getrusage(who int, rusage *syscall.Rusage) (err error)
	Getsockname(fd int) (sa syscall.Sockaddr, err error)
	GetsockoptICMPv6Filter(fd int, level int, opt int) (*syscall.ICMPv6Filter, error)
	GetsockoptIPMreq(fd int, level int, opt int) (*syscall.IPMreq, error)
	GetsockoptIPMreqn(fd int, level int, opt int) (*syscall.IPMreqn, error)
	GetsockoptIPv6MTUInfo(fd int, level int, opt int) (*syscall.IPv6MTUInfo, error)
	GetsockoptIPv6Mreq(fd int, level int, opt int) (*syscall.IPv6Mreq, error)
	GetsockoptInet4Addr(fd int, level int, opt int) (value [4]byte, err error)
	GetsockoptInt(fd int, level int, opt int) (value int, err error)
	GetsockoptUcred(fd int, level int, opt int) (*syscall.Ucred, error)
	Gettid() (tid int)
	Gettimeofday(tv *syscall.Timeval) (err error)
	Getuid() (uid int)
	Getwd() (wd string, err error)
	Getxattr(path string, attr string, dest []byte) (sz int, err error)
	InotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, err error)
	InotifyInit() (fd int, err error)
	InotifyInit1(flags int) (fd int, err error)
	InotifyRmWatch(fd int, watchdesc uint32) (success int, err error)
	Ioperm(from int, num int, on int) (err error)
	Iopl(level int) (err error)
	Kill(pid int, sig syscall.Signal) (err error)
	Klogctl(typ int, buf []byte) (n int, err error)
	Lchown(path string, uid int, gid int) (err error)
	Link(oldpath string, newpath string) (err error)
	Listen(s int, n int) (err error)
	Listxattr(path string, dest []byte) (sz int, err error)
	LsfJump(code int, k int, jt int, jf int) *syscall.SockFilter
	LsfSocket(ifindex int, proto int) (int, error)
	LsfStmt(code int, k int) *syscall.SockFilter
	Lstat(path string, stat *syscall.Stat_t) (err error)
	Madvise(b []byte, advice int) (err error)
	Mkdir(path string, mode uint32) (err error)
	Mkdirat(dirfd int, path string, mode uint32) (err error)
	Mkfifo(path string, mode uint32) (err error)
	Mknod(path string, mode uint32, dev int) (err error)
	Mknodat(dirfd int, path string, mode uint32, dev int) (err error)
	Mlock(b []byte) (err error)
	Mlockall(flags int) (err error)
	Mmap(fd int, offset int64, length int, prot int, flags int) (data []byte, err error)
	Mount(source string, target string, fstype string, flags uintptr, data string) (err error)
	Mprotect(b []byte, prot int) (err error)
	Munlock(b []byte) (err error)
	Munlockall() (err error)
	Munmap(b []byte) (err error)
	Nanosleep(time *syscall.Timespec, leftover *syscall.Timespec) (err error)
	NetlinkRIB(proto int, family int) ([]byte, error)
	NsecToTimespec(nsec int64) syscall.Timespec
	NsecToTimeval(nsec int64) syscall.Timeval
	Open(path string, mode int, perm uint32) (fd int, err error)
	Openat(dirfd int, path string, flags int, mode uint32) (fd int, err error)
	ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string)
	ParseNetlinkMessage(b []byte) ([]syscall.NetlinkMessage, error)
	ParseNetlinkRouteAttr(m *syscall.NetlinkMessage) ([]syscall.NetlinkRouteAttr, error)
	ParseSocketControlMessage(b []byte) ([]syscall.SocketControlMessage, error)
	ParseUnixCredentials(m *syscall.SocketControlMessage) (*syscall.Ucred, error)
	ParseUnixRights(m *syscall.SocketControlMessage) ([]int, error)
	Pause() (err error)
	Pipe(p []int) error
	Pipe2(p []int, flags int) error
	PivotRoot(newroot string, putold string) (err error)
	Pread(fd int, p []byte, offset int64) (n int, err error)
	PtraceAttach(pid int) (err error)
	PtraceCont(pid int, signal int) (err error)
	PtraceDetach(pid int) (err error)
	PtraceGetEventMsg(pid int) (msg uint, err error)
	PtraceGetRegs(pid int, regsout *syscall.PtraceRegs) (err error)
	PtracePeekData(pid int, addr uintptr, out []byte) (count int, err error)
	PtracePeekText(pid int, addr uintptr, out []byte) (count int, err error)
	PtracePokeData(pid int, addr uintptr, data []byte) (count int, err error)
	PtracePokeText(pid int, addr uintptr, data []byte) (count int, err error)
	PtraceSetOptions(pid int, options int) (err error)
	PtraceSetRegs(pid int, regs *syscall.PtraceRegs) (err error)
	PtraceSingleStep(pid int) (err error)
	PtraceSyscall(pid int, signal int) (err error)
	Pwrite(fd int, p []byte, offset int64) (n int, err error)
	RawSyscall(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)
	RawSyscall6(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)
	Read(fd int, p []byte) (n int, err error)
	ReadDirent(fd int, buf []byte) (n int, err error)
	Readlink(path string, buf []byte) (n int, err error)
	Reboot(cmd int) (err error)
	Recvfrom(fd int, p []byte, flags int) (n int, from syscall.Sockaddr, err error)
	Recvmsg(fd int, p []byte, oob []byte, flags int) (n int, oobn int, recvflags int, from syscall.Sockaddr, err error)
	Removexattr(path string, attr string) (err error)
	Rename(oldpath string, newpath string) (err error)
	Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (err error)
	Rmdir(path string) error
	Seek(fd int, offset int64, whence int) (off int64, err error)
	Select(nfd int, r *syscall.FdSet, w *syscall.FdSet, e *syscall.FdSet, timeout *syscall.Timeval) (n int, err error)
	Sendfile(outfd int, infd int, offset *int64, count int) (written int, err error)
	Sendmsg(fd int, p []byte, oob []byte, to syscall.Sockaddr, flags int) (err error)
	SendmsgN(fd int, p []byte, oob []byte, to syscall.Sockaddr, flags int) (n int, err error)
	Sendto(fd int, p []byte, flags int, to syscall.Sockaddr) (err error)
	SetLsfPromisc(name string, m bool) error
	SetNonblock(fd int, nonblocking bool) (err error)
	Setdomainname(p []byte) (err error)
	Setegid(egid int) (err error)
	Setenv(key string, value string) error
	Seteuid(euid int) (err error)
	Setfsgid(gid int) (err error)
	Setfsuid(uid int) (err error)
	Setgid(gid int) (err error)
	Setgroups(gids []int) (err error)
	Sethostname(p []byte) (err error)
	Setpgid(pid int, pgid int) (err error)
	Setpriority(which int, who int, prio int) (err error)
	Setregid(rgid int, egid int) (err error)
	Setresgid(rgid int, egid int, sgid int) (err error)
	Setresuid(ruid int, euid int, suid int) (err error)
	Setreuid(ruid int, euid int) (err error)
	Setrlimit(resource int, rlim *syscall.Rlimit) (err error)
	Setsid() (pid int, err error)
	SetsockoptByte(fd int, level int, opt int, value byte) (err error)
	SetsockoptICMPv6Filter(fd int, level int, opt int, filter *syscall.ICMPv6Filter) error
	SetsockoptIPMreq(fd int, level int, opt int, mreq *syscall.IPMreq) (err error)
	SetsockoptIPMreqn(fd int, level int, opt int, mreq *syscall.IPMreqn) (err error)
	SetsockoptIPv6Mreq(fd int, level int, opt int, mreq *syscall.IPv6Mreq) (err error)
	SetsockoptInet4Addr(fd int, level int, opt int, value [4]byte) (err error)
	SetsockoptInt(fd int, level int, opt int, value int) (err error)
	SetsockoptLinger(fd int, level int, opt int, l *syscall.Linger) (err error)
	SetsockoptString(fd int, level int, opt int, s string) (err error)
	SetsockoptTimeval(fd int, level int, opt int, tv *syscall.Timeval) (err error)
	Settimeofday(tv *syscall.Timeval) (err error)
	Setuid(uid int) (err error)
	Setxattr(path string, attr string, data []byte, flags int) (err error)
	Shutdown(fd int, how int) (err error)
	SlicePtrFromStrings(ss []string) ([]*byte, error)
	Socket(domain int, typ int, proto int) (fd int, err error)
	Socketpair(domain int, typ int, proto int) (fd [2]int, err error)
	Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int64, err error)
	StartProcess(argv0 string, argv []string, attr *syscall.ProcAttr) (pid int, handle uintptr, err error)
	Stat(path string, stat *syscall.Stat_t) (err error)
	Statfs(path string, buf *syscall.Statfs_t) (err error)
	StringBytePtr(s string) *byte
	StringByteSlice(s string) []byte
	StringSlicePtr(ss []string) []*byte
	Symlink(oldpath string, newpath string) (err error)
	Sync()
	SyncFileRange(fd int, off int64, n int64, flags int) (err error)
	Syscall(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)
	Syscall6(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno)
	Sysinfo(info *syscall.Sysinfo_t) (err error)
	Tee(rfd int, wfd int, len int, flags int) (n int64, err error)
	Tgkill(tgid int, tid int, sig syscall.Signal) (err error)
	Time(t *syscall.Time_t) (tt syscall.Time_t, err error)
	Times(tms *syscall.Tms) (ticks uintptr, err error)
	TimespecToNsec(ts syscall.Timespec) int64
	TimevalToNsec(tv syscall.Timeval) int64
	Truncate(path string, length int64) (err error)
	Umask(mask int) (oldmask int)
	Uname(buf *syscall.Utsname) (err error)
	UnixCredentials(ucred *syscall.Ucred) []byte
	UnixRights(fds ...int) []byte
	Unlink(path string) error
	Unlinkat(dirfd int, path string) error
	Unmount(target string, flags int) (err error)
	Unsetenv(key string) error
	Unshare(flags int) (err error)
	Ustat(dev int, ubuf *syscall.Ustat_t) (err error)
	Utime(path string, buf *syscall.Utimbuf) (err error)
	Utimes(path string, tv []syscall.Timeval) (err error)
	UtimesNano(path string, ts []syscall.Timespec) (err error)
	Wait4(pid int, wstatus *syscall.WaitStatus, options int, rusage *syscall.Rusage) (wpid int, err error)
	Write(fd int, p []byte) (n int, err error)
}

type Impl struct{}

func (*Impl) Accept(fd int) (nfd int, sa syscall.Sockaddr, err error) {
	return syscall.Accept(fd)
}
func (*Impl) Accept4(fd int, flags int) (nfd int, sa syscall.Sockaddr, err error) {
	return syscall.Accept4(fd, flags)
}
func (*Impl) Access(path string, mode uint32) (err error) {
	return syscall.Access(path, mode)
}
func (*Impl) Acct(path string) (err error) {
	return syscall.Acct(path)
}
func (*Impl) Adjtimex(buf *syscall.Timex) (state int, err error) {
	return syscall.Adjtimex(buf)
}
func (*Impl) AllThreadsSyscall(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno) {
	return syscall.AllThreadsSyscall(trap, a1, a2, a3)
}
func (*Impl) AllThreadsSyscall6(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno) {
	return syscall.AllThreadsSyscall6(trap, a1, a2, a3, a4, a5, a6)
}
func (*Impl) AttachLsf(fd int, i []syscall.SockFilter) error {
	return syscall.AttachLsf(fd, i)
}
func (*Impl) Bind(fd int, sa syscall.Sockaddr) (err error) {
	return syscall.Bind(fd, sa)
}
func (*Impl) BindToDevice(fd int, device string) (err error) {
	return syscall.BindToDevice(fd, device)
}
func (*Impl) BytePtrFromString(s string) (*byte, error) {
	return syscall.BytePtrFromString(s)
}
func (*Impl) ByteSliceFromString(s string) ([]byte, error) {
	return syscall.ByteSliceFromString(s)
}
func (*Impl) Chdir(path string) (err error) {
	return syscall.Chdir(path)
}
func (*Impl) Chmod(path string, mode uint32) (err error) {
	return syscall.Chmod(path, mode)
}
func (*Impl) Chown(path string, uid int, gid int) (err error) {
	return syscall.Chown(path, uid, gid)
}
func (*Impl) Chroot(path string) (err error) {
	return syscall.Chroot(path)
}
func (*Impl) Clearenv() {
	syscall.Clearenv()
}
func (*Impl) Close(fd int) (err error) {
	return syscall.Close(fd)
}
func (*Impl) CloseOnExec(fd int) {
	syscall.CloseOnExec(fd)
}
func (*Impl) CmsgLen(datalen int) int {
	return syscall.CmsgLen(datalen)
}
func (*Impl) CmsgSpace(datalen int) int {
	return syscall.CmsgSpace(datalen)
}
func (*Impl) Connect(fd int, sa syscall.Sockaddr) (err error) {
	return syscall.Connect(fd, sa)
}
func (*Impl) Creat(path string, mode uint32) (fd int, err error) {
	return syscall.Creat(path, mode)
}
func (*Impl) DetachLsf(fd int) error {
	return syscall.DetachLsf(fd)
}
func (*Impl) Dup(oldfd int) (fd int, err error) {
	return syscall.Dup(oldfd)
}
func (*Impl) Dup2(oldfd int, newfd int) (err error) {
	return syscall.Dup2(oldfd, newfd)
}
func (*Impl) Dup3(oldfd int, newfd int, flags int) (err error) {
	return syscall.Dup3(oldfd, newfd, flags)
}
func (*Impl) Environ() []string {
	return syscall.Environ()
}
func (*Impl) EpollCreate(size int) (fd int, err error) {
	return syscall.EpollCreate(size)
}
func (*Impl) EpollCreate1(flag int) (fd int, err error) {
	return syscall.EpollCreate1(flag)
}
func (*Impl) EpollCtl(epfd int, op int, fd int, event *syscall.EpollEvent) (err error) {
	return syscall.EpollCtl(epfd, op, fd, event)
}
func (*Impl) EpollWait(epfd int, events []syscall.EpollEvent, msec int) (n int, err error) {
	return syscall.EpollWait(epfd, events, msec)
}
func (*Impl) Exec(argv0 string, argv []string, envv []string) (err error) {
	return syscall.Exec(argv0, argv, envv)
}
func (*Impl) Exit(code int) {
	syscall.Exit(code)
}
func (*Impl) Faccessat(dirfd int, path string, mode uint32, flags int) (err error) {
	return syscall.Faccessat(dirfd, path, mode, flags)
}
func (*Impl) Fallocate(fd int, mode uint32, off int64, len int64) (err error) {
	return syscall.Fallocate(fd, mode, off, len)
}
func (*Impl) Fchdir(fd int) (err error) {
	return syscall.Fchdir(fd)
}
func (*Impl) Fchmod(fd int, mode uint32) (err error) {
	return syscall.Fchmod(fd, mode)
}
func (*Impl) Fchmodat(dirfd int, path string, mode uint32, flags int) (err error) {
	return syscall.Fchmodat(dirfd, path, mode, flags)
}
func (*Impl) Fchown(fd int, uid int, gid int) (err error) {
	return syscall.Fchown(fd, uid, gid)
}
func (*Impl) Fchownat(dirfd int, path string, uid int, gid int, flags int) (err error) {
	return syscall.Fchownat(dirfd, path, uid, gid, flags)
}
func (*Impl) FcntlFlock(fd uintptr, cmd int, lk *syscall.Flock_t) error {
	return syscall.FcntlFlock(fd, cmd, lk)
}
func (*Impl) Fdatasync(fd int) (err error) {
	return syscall.Fdatasync(fd)
}
func (*Impl) Flock(fd int, how int) (err error) {
	return syscall.Flock(fd, how)
}
func (*Impl) ForkExec(argv0 string, argv []string, attr *syscall.ProcAttr) (pid int, err error) {
	return syscall.ForkExec(argv0, argv, attr)
}
func (*Impl) Fstat(fd int, stat *syscall.Stat_t) (err error) {
	return syscall.Fstat(fd, stat)
}
func (*Impl) Fstatfs(fd int, buf *syscall.Statfs_t) (err error) {
	return syscall.Fstatfs(fd, buf)
}
func (*Impl) Fsync(fd int) (err error) {
	return syscall.Fsync(fd)
}
func (*Impl) Ftruncate(fd int, length int64) (err error) {
	return syscall.Ftruncate(fd, length)
}
func (*Impl) Futimes(fd int, tv []syscall.Timeval) (err error) {
	return syscall.Futimes(fd, tv)
}
func (*Impl) Futimesat(dirfd int, path string, tv []syscall.Timeval) (err error) {
	return syscall.Futimesat(dirfd, path, tv)
}
func (*Impl) Getcwd(buf []byte) (n int, err error) {
	return syscall.Getcwd(buf)
}
func (*Impl) Getdents(fd int, buf []byte) (n int, err error) {
	return syscall.Getdents(fd, buf)
}
func (*Impl) Getegid() (egid int) {
	return syscall.Getegid()
}
func (*Impl) Getenv(key string) (value string, found bool) {
	return syscall.Getenv(key)
}
func (*Impl) Geteuid() (euid int) {
	return syscall.Geteuid()
}
func (*Impl) Getgid() (gid int) {
	return syscall.Getgid()
}
func (*Impl) Getgroups() (gids []int, err error) {
	return syscall.Getgroups()
}
func (*Impl) Getpagesize() int {
	return syscall.Getpagesize()
}
func (*Impl) Getpeername(fd int) (sa syscall.Sockaddr, err error) {
	return syscall.Getpeername(fd)
}
func (*Impl) Getpgid(pid int) (pgid int, err error) {
	return syscall.Getpgid(pid)
}
func (*Impl) Getpgrp() (pid int) {
	return syscall.Getpgrp()
}
func (*Impl) Getpid() (pid int) {
	return syscall.Getpid()
}
func (*Impl) Getppid() (ppid int) {
	return syscall.Getppid()
}
func (*Impl) Getpriority(which int, who int) (prio int, err error) {
	return syscall.Getpriority(which, who)
}
func (*Impl) Getrlimit(resource int, rlim *syscall.Rlimit) (err error) {
	return syscall.Getrlimit(resource, rlim)
}
func (*Impl) Getrusage(who int, rusage *syscall.Rusage) (err error) {
	return syscall.Getrusage(who, rusage)
}
func (*Impl) Getsockname(fd int) (sa syscall.Sockaddr, err error) {
	return syscall.Getsockname(fd)
}
func (*Impl) GetsockoptICMPv6Filter(fd int, level int, opt int) (*syscall.ICMPv6Filter, error) {
	return syscall.GetsockoptICMPv6Filter(fd, level, opt)
}
func (*Impl) GetsockoptIPMreq(fd int, level int, opt int) (*syscall.IPMreq, error) {
	return syscall.GetsockoptIPMreq(fd, level, opt)
}
func (*Impl) GetsockoptIPMreqn(fd int, level int, opt int) (*syscall.IPMreqn, error) {
	return syscall.GetsockoptIPMreqn(fd, level, opt)
}
func (*Impl) GetsockoptIPv6MTUInfo(fd int, level int, opt int) (*syscall.IPv6MTUInfo, error) {
	return syscall.GetsockoptIPv6MTUInfo(fd, level, opt)
}
func (*Impl) GetsockoptIPv6Mreq(fd int, level int, opt int) (*syscall.IPv6Mreq, error) {
	return syscall.GetsockoptIPv6Mreq(fd, level, opt)
}
func (*Impl) GetsockoptInet4Addr(fd int, level int, opt int) (value [4]byte, err error) {
	return syscall.GetsockoptInet4Addr(fd, level, opt)
}
func (*Impl) GetsockoptInt(fd int, level int, opt int) (value int, err error) {
	return syscall.GetsockoptInt(fd, level, opt)
}
func (*Impl) GetsockoptUcred(fd int, level int, opt int) (*syscall.Ucred, error) {
	return syscall.GetsockoptUcred(fd, level, opt)
}
func (*Impl) Gettid() (tid int) {
	return syscall.Gettid()
}
func (*Impl) Gettimeofday(tv *syscall.Timeval) (err error) {
	return syscall.Gettimeofday(tv)
}
func (*Impl) Getuid() (uid int) {
	return syscall.Getuid()
}
func (*Impl) Getwd() (wd string, err error) {
	return syscall.Getwd()
}
func (*Impl) Getxattr(path string, attr string, dest []byte) (sz int, err error) {
	return syscall.Getxattr(path, attr, dest)
}
func (*Impl) InotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, err error) {
	return syscall.InotifyAddWatch(fd, pathname, mask)
}
func (*Impl) InotifyInit() (fd int, err error) {
	return syscall.InotifyInit()
}
func (*Impl) InotifyInit1(flags int) (fd int, err error) {
	return syscall.InotifyInit1(flags)
}
func (*Impl) InotifyRmWatch(fd int, watchdesc uint32) (success int, err error) {
	return syscall.InotifyRmWatch(fd, watchdesc)
}
func (*Impl) Ioperm(from int, num int, on int) (err error) {
	return syscall.Ioperm(from, num, on)
}
func (*Impl) Iopl(level int) (err error) {
	return syscall.Iopl(level)
}
func (*Impl) Kill(pid int, sig syscall.Signal) (err error) {
	return syscall.Kill(pid, sig)
}
func (*Impl) Klogctl(typ int, buf []byte) (n int, err error) {
	return syscall.Klogctl(typ, buf)
}
func (*Impl) Lchown(path string, uid int, gid int) (err error) {
	return syscall.Lchown(path, uid, gid)
}
func (*Impl) Link(oldpath string, newpath string) (err error) {
	return syscall.Link(oldpath, newpath)
}
func (*Impl) Listen(s int, n int) (err error) {
	return syscall.Listen(s, n)
}
func (*Impl) Listxattr(path string, dest []byte) (sz int, err error) {
	return syscall.Listxattr(path, dest)
}
func (*Impl) LsfJump(code int, k int, jt int, jf int) *syscall.SockFilter {
	return syscall.LsfJump(code, k, jt, jf)
}
func (*Impl) LsfSocket(ifindex int, proto int) (int, error) {
	return syscall.LsfSocket(ifindex, proto)
}
func (*Impl) LsfStmt(code int, k int) *syscall.SockFilter {
	return syscall.LsfStmt(code, k)
}
func (*Impl) Lstat(path string, stat *syscall.Stat_t) (err error) {
	return syscall.Lstat(path, stat)
}
func (*Impl) Madvise(b []byte, advice int) (err error) {
	return syscall.Madvise(b, advice)
}
func (*Impl) Mkdir(path string, mode uint32) (err error) {
	return syscall.Mkdir(path, mode)
}
func (*Impl) Mkdirat(dirfd int, path string, mode uint32) (err error) {
	return syscall.Mkdirat(dirfd, path, mode)
}
func (*Impl) Mkfifo(path string, mode uint32) (err error) {
	return syscall.Mkfifo(path, mode)
}
func (*Impl) Mknod(path string, mode uint32, dev int) (err error) {
	return syscall.Mknod(path, mode, dev)
}
func (*Impl) Mknodat(dirfd int, path string, mode uint32, dev int) (err error) {
	return syscall.Mknodat(dirfd, path, mode, dev)
}
func (*Impl) Mlock(b []byte) (err error) {
	return syscall.Mlock(b)
}
func (*Impl) Mlockall(flags int) (err error) {
	return syscall.Mlockall(flags)
}
func (*Impl) Mmap(fd int, offset int64, length int, prot int, flags int) (data []byte, err error) {
	return syscall.Mmap(fd, offset, length, prot, flags)
}
func (*Impl) Mount(source string, target string, fstype string, flags uintptr, data string) (err error) {
	return syscall.Mount(source, target, fstype, flags, data)
}
func (*Impl) Mprotect(b []byte, prot int) (err error) {
	return syscall.Mprotect(b, prot)
}
func (*Impl) Munlock(b []byte) (err error) {
	return syscall.Munlock(b)
}
func (*Impl) Munlockall() (err error) {
	return syscall.Munlockall()
}
func (*Impl) Munmap(b []byte) (err error) {
	return syscall.Munmap(b)
}
func (*Impl) Nanosleep(time *syscall.Timespec, leftover *syscall.Timespec) (err error) {
	return syscall.Nanosleep(time, leftover)
}
func (*Impl) NetlinkRIB(proto int, family int) ([]byte, error) {
	return syscall.NetlinkRIB(proto, family)
}
func (*Impl) NsecToTimespec(nsec int64) syscall.Timespec {
	return syscall.NsecToTimespec(nsec)
}
func (*Impl) NsecToTimeval(nsec int64) syscall.Timeval {
	return syscall.NsecToTimeval(nsec)
}
func (*Impl) Open(path string, mode int, perm uint32) (fd int, err error) {
	return syscall.Open(path, mode, perm)
}
func (*Impl) Openat(dirfd int, path string, flags int, mode uint32) (fd int, err error) {
	return syscall.Openat(dirfd, path, flags, mode)
}
func (*Impl) ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {
	return syscall.ParseDirent(buf, max, names)
}
func (*Impl) ParseNetlinkMessage(b []byte) ([]syscall.NetlinkMessage, error) {
	return syscall.ParseNetlinkMessage(b)
}
func (*Impl) ParseNetlinkRouteAttr(m *syscall.NetlinkMessage) ([]syscall.NetlinkRouteAttr, error) {
	return syscall.ParseNetlinkRouteAttr(m)
}
func (*Impl) ParseSocketControlMessage(b []byte) ([]syscall.SocketControlMessage, error) {
	return syscall.ParseSocketControlMessage(b)
}
func (*Impl) ParseUnixCredentials(m *syscall.SocketControlMessage) (*syscall.Ucred, error) {
	return syscall.ParseUnixCredentials(m)
}
func (*Impl) ParseUnixRights(m *syscall.SocketControlMessage) ([]int, error) {
	return syscall.ParseUnixRights(m)
}
func (*Impl) Pause() (err error) {
	return syscall.Pause()
}
func (*Impl) Pipe(p []int) error {
	return syscall.Pipe(p)
}
func (*Impl) Pipe2(p []int, flags int) error {
	return syscall.Pipe2(p, flags)
}
func (*Impl) PivotRoot(newroot string, putold string) (err error) {
	return syscall.PivotRoot(newroot, putold)
}
func (*Impl) Pread(fd int, p []byte, offset int64) (n int, err error) {
	return syscall.Pread(fd, p, offset)
}
func (*Impl) PtraceAttach(pid int) (err error) {
	return syscall.PtraceAttach(pid)
}
func (*Impl) PtraceCont(pid int, signal int) (err error) {
	return syscall.PtraceCont(pid, signal)
}
func (*Impl) PtraceDetach(pid int) (err error) {
	return syscall.PtraceDetach(pid)
}
func (*Impl) PtraceGetEventMsg(pid int) (msg uint, err error) {
	return syscall.PtraceGetEventMsg(pid)
}
func (*Impl) PtraceGetRegs(pid int, regsout *syscall.PtraceRegs) (err error) {
	return syscall.PtraceGetRegs(pid, regsout)
}
func (*Impl) PtracePeekData(pid int, addr uintptr, out []byte) (count int, err error) {
	return syscall.PtracePeekData(pid, addr, out)
}
func (*Impl) PtracePeekText(pid int, addr uintptr, out []byte) (count int, err error) {
	return syscall.PtracePeekText(pid, addr, out)
}
func (*Impl) PtracePokeData(pid int, addr uintptr, data []byte) (count int, err error) {
	return syscall.PtracePokeData(pid, addr, data)
}
func (*Impl) PtracePokeText(pid int, addr uintptr, data []byte) (count int, err error) {
	return syscall.PtracePokeText(pid, addr, data)
}
func (*Impl) PtraceSetOptions(pid int, options int) (err error) {
	return syscall.PtraceSetOptions(pid, options)
}
func (*Impl) PtraceSetRegs(pid int, regs *syscall.PtraceRegs) (err error) {
	return syscall.PtraceSetRegs(pid, regs)
}
func (*Impl) PtraceSingleStep(pid int) (err error) {
	return syscall.PtraceSingleStep(pid)
}
func (*Impl) PtraceSyscall(pid int, signal int) (err error) {
	return syscall.PtraceSyscall(pid, signal)
}
func (*Impl) Pwrite(fd int, p []byte, offset int64) (n int, err error) {
	return syscall.Pwrite(fd, p, offset)
}
func (*Impl) RawSyscall(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno) {
	return syscall.RawSyscall(trap, a1, a2, a3)
}
func (*Impl) RawSyscall6(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno) {
	return syscall.RawSyscall6(trap, a1, a2, a3, a4, a5, a6)
}
func (*Impl) Read(fd int, p []byte) (n int, err error) {
	return syscall.Read(fd, p)
}
func (*Impl) ReadDirent(fd int, buf []byte) (n int, err error) {
	return syscall.ReadDirent(fd, buf)
}
func (*Impl) Readlink(path string, buf []byte) (n int, err error) {
	return syscall.Readlink(path, buf)
}
func (*Impl) Reboot(cmd int) (err error) {
	return syscall.Reboot(cmd)
}
func (*Impl) Recvfrom(fd int, p []byte, flags int) (n int, from syscall.Sockaddr, err error) {
	return syscall.Recvfrom(fd, p, flags)
}
func (*Impl) Recvmsg(fd int, p []byte, oob []byte, flags int) (n int, oobn int, recvflags int, from syscall.Sockaddr, err error) {
	return syscall.Recvmsg(fd, p, oob, flags)
}
func (*Impl) Removexattr(path string, attr string) (err error) {
	return syscall.Removexattr(path, attr)
}
func (*Impl) Rename(oldpath string, newpath string) (err error) {
	return syscall.Rename(oldpath, newpath)
}
func (*Impl) Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (err error) {
	return syscall.Renameat(olddirfd, oldpath, newdirfd, newpath)
}
func (*Impl) Rmdir(path string) error {
	return syscall.Rmdir(path)
}
func (*Impl) Seek(fd int, offset int64, whence int) (off int64, err error) {
	return syscall.Seek(fd, offset, whence)
}
func (*Impl) Select(nfd int, r *syscall.FdSet, w *syscall.FdSet, e *syscall.FdSet, timeout *syscall.Timeval) (n int, err error) {
	return syscall.Select(nfd, r, w, e, timeout)
}
func (*Impl) Sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {
	return syscall.Sendfile(outfd, infd, offset, count)
}
func (*Impl) Sendmsg(fd int, p []byte, oob []byte, to syscall.Sockaddr, flags int) (err error) {
	return syscall.Sendmsg(fd, p, oob, to, flags)
}
func (*Impl) SendmsgN(fd int, p []byte, oob []byte, to syscall.Sockaddr, flags int) (n int, err error) {
	return syscall.SendmsgN(fd, p, oob, to, flags)
}
func (*Impl) Sendto(fd int, p []byte, flags int, to syscall.Sockaddr) (err error) {
	return syscall.Sendto(fd, p, flags, to)
}
func (*Impl) SetLsfPromisc(name string, m bool) error {
	return syscall.SetLsfPromisc(name, m)
}
func (*Impl) SetNonblock(fd int, nonblocking bool) (err error) {
	return syscall.SetNonblock(fd, nonblocking)
}
func (*Impl) Setdomainname(p []byte) (err error) {
	return syscall.Setdomainname(p)
}
func (*Impl) Setegid(egid int) (err error) {
	return syscall.Setegid(egid)
}
func (*Impl) Setenv(key string, value string) error {
	return syscall.Setenv(key, value)
}
func (*Impl) Seteuid(euid int) (err error) {
	return syscall.Seteuid(euid)
}
func (*Impl) Setfsgid(gid int) (err error) {
	return syscall.Setfsgid(gid)
}
func (*Impl) Setfsuid(uid int) (err error) {
	return syscall.Setfsuid(uid)
}
func (*Impl) Setgid(gid int) (err error) {
	return syscall.Setgid(gid)
}
func (*Impl) Setgroups(gids []int) (err error) {
	return syscall.Setgroups(gids)
}
func (*Impl) Sethostname(p []byte) (err error) {
	return syscall.Sethostname(p)
}
func (*Impl) Setpgid(pid int, pgid int) (err error) {
	return syscall.Setpgid(pid, pgid)
}
func (*Impl) Setpriority(which int, who int, prio int) (err error) {
	return syscall.Setpriority(which, who, prio)
}
func (*Impl) Setregid(rgid int, egid int) (err error) {
	return syscall.Setregid(rgid, egid)
}
func (*Impl) Setresgid(rgid int, egid int, sgid int) (err error) {
	return syscall.Setresgid(rgid, egid, sgid)
}
func (*Impl) Setresuid(ruid int, euid int, suid int) (err error) {
	return syscall.Setresuid(ruid, euid, suid)
}
func (*Impl) Setreuid(ruid int, euid int) (err error) {
	return syscall.Setreuid(ruid, euid)
}
func (*Impl) Setrlimit(resource int, rlim *syscall.Rlimit) (err error) {
	return syscall.Setrlimit(resource, rlim)
}
func (*Impl) Setsid() (pid int, err error) {
	return syscall.Setsid()
}
func (*Impl) SetsockoptByte(fd int, level int, opt int, value byte) (err error) {
	return syscall.SetsockoptByte(fd, level, opt, value)
}
func (*Impl) SetsockoptICMPv6Filter(fd int, level int, opt int, filter *syscall.ICMPv6Filter) error {
	return syscall.SetsockoptICMPv6Filter(fd, level, opt, filter)
}
func (*Impl) SetsockoptIPMreq(fd int, level int, opt int, mreq *syscall.IPMreq) (err error) {
	return syscall.SetsockoptIPMreq(fd, level, opt, mreq)
}
func (*Impl) SetsockoptIPMreqn(fd int, level int, opt int, mreq *syscall.IPMreqn) (err error) {
	return syscall.SetsockoptIPMreqn(fd, level, opt, mreq)
}
func (*Impl) SetsockoptIPv6Mreq(fd int, level int, opt int, mreq *syscall.IPv6Mreq) (err error) {
	return syscall.SetsockoptIPv6Mreq(fd, level, opt, mreq)
}
func (*Impl) SetsockoptInet4Addr(fd int, level int, opt int, value [4]byte) (err error) {
	return syscall.SetsockoptInet4Addr(fd, level, opt, value)
}
func (*Impl) SetsockoptInt(fd int, level int, opt int, value int) (err error) {
	return syscall.SetsockoptInt(fd, level, opt, value)
}
func (*Impl) SetsockoptLinger(fd int, level int, opt int, l *syscall.Linger) (err error) {
	return syscall.SetsockoptLinger(fd, level, opt, l)
}
func (*Impl) SetsockoptString(fd int, level int, opt int, s string) (err error) {
	return syscall.SetsockoptString(fd, level, opt, s)
}
func (*Impl) SetsockoptTimeval(fd int, level int, opt int, tv *syscall.Timeval) (err error) {
	return syscall.SetsockoptTimeval(fd, level, opt, tv)
}
func (*Impl) Settimeofday(tv *syscall.Timeval) (err error) {
	return syscall.Settimeofday(tv)
}
func (*Impl) Setuid(uid int) (err error) {
	return syscall.Setuid(uid)
}
func (*Impl) Setxattr(path string, attr string, data []byte, flags int) (err error) {
	return syscall.Setxattr(path, attr, data, flags)
}
func (*Impl) Shutdown(fd int, how int) (err error) {
	return syscall.Shutdown(fd, how)
}
func (*Impl) SlicePtrFromStrings(ss []string) ([]*byte, error) {
	return syscall.SlicePtrFromStrings(ss)
}
func (*Impl) Socket(domain int, typ int, proto int) (fd int, err error) {
	return syscall.Socket(domain, typ, proto)
}
func (*Impl) Socketpair(domain int, typ int, proto int) (fd [2]int, err error) {
	return syscall.Socketpair(domain, typ, proto)
}
func (*Impl) Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int64, err error) {
	return syscall.Splice(rfd, roff, wfd, woff, len, flags)
}
func (*Impl) StartProcess(argv0 string, argv []string, attr *syscall.ProcAttr) (pid int, handle uintptr, err error) {
	return syscall.StartProcess(argv0, argv, attr)
}
func (*Impl) Stat(path string, stat *syscall.Stat_t) (err error) {
	return syscall.Stat(path, stat)
}
func (*Impl) Statfs(path string, buf *syscall.Statfs_t) (err error) {
	return syscall.Statfs(path, buf)
}
func (*Impl) StringBytePtr(s string) *byte {
	return syscall.StringBytePtr(s)
}
func (*Impl) StringByteSlice(s string) []byte {
	return syscall.StringByteSlice(s)
}
func (*Impl) StringSlicePtr(ss []string) []*byte {
	return syscall.StringSlicePtr(ss)
}
func (*Impl) Symlink(oldpath string, newpath string) (err error) {
	return syscall.Symlink(oldpath, newpath)
}
func (*Impl) Sync() {
	syscall.Sync()
}
func (*Impl) SyncFileRange(fd int, off int64, n int64, flags int) (err error) {
	return syscall.SyncFileRange(fd, off, n, flags)
}
func (*Impl) Syscall(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno) {
	return syscall.Syscall(trap, a1, a2, a3)
}
func (*Impl) Syscall6(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1 uintptr, r2 uintptr, err syscall.Errno) {
	return syscall.Syscall6(trap, a1, a2, a3, a4, a5, a6)
}
func (*Impl) Sysinfo(info *syscall.Sysinfo_t) (err error) {
	return syscall.Sysinfo(info)
}
func (*Impl) Tee(rfd int, wfd int, len int, flags int) (n int64, err error) {
	return syscall.Tee(rfd, wfd, len, flags)
}
func (*Impl) Tgkill(tgid int, tid int, sig syscall.Signal) (err error) {
	return syscall.Tgkill(tgid, tid, sig)
}
func (*Impl) Time(t *syscall.Time_t) (tt syscall.Time_t, err error) {
	return syscall.Time(t)
}
func (*Impl) Times(tms *syscall.Tms) (ticks uintptr, err error) {
	return syscall.Times(tms)
}
func (*Impl) TimespecToNsec(ts syscall.Timespec) int64 {
	return syscall.TimespecToNsec(ts)
}
func (*Impl) TimevalToNsec(tv syscall.Timeval) int64 {
	return syscall.TimevalToNsec(tv)
}
func (*Impl) Truncate(path string, length int64) (err error) {
	return syscall.Truncate(path, length)
}
func (*Impl) Umask(mask int) (oldmask int) {
	return syscall.Umask(mask)
}
func (*Impl) Uname(buf *syscall.Utsname) (err error) {
	return syscall.Uname(buf)
}
func (*Impl) UnixCredentials(ucred *syscall.Ucred) []byte {
	return syscall.UnixCredentials(ucred)
}
func (*Impl) UnixRights(fds ...int) []byte {
	return syscall.UnixRights(fds...)
}
func (*Impl) Unlink(path string) error {
	return syscall.Unlink(path)
}
func (*Impl) Unlinkat(dirfd int, path string) error {
	return syscall.Unlinkat(dirfd, path)
}
func (*Impl) Unmount(target string, flags int) (err error) {
	return syscall.Unmount(target, flags)
}
func (*Impl) Unsetenv(key string) error {
	return syscall.Unsetenv(key)
}
func (*Impl) Unshare(flags int) (err error) {
	return syscall.Unshare(flags)
}
func (*Impl) Ustat(dev int, ubuf *syscall.Ustat_t) (err error) {
	return syscall.Ustat(dev, ubuf)
}
func (*Impl) Utime(path string, buf *syscall.Utimbuf) (err error) {
	return syscall.Utime(path, buf)
}
func (*Impl) Utimes(path string, tv []syscall.Timeval) (err error) {
	return syscall.Utimes(path, tv)
}
func (*Impl) UtimesNano(path string, ts []syscall.Timespec) (err error) {
	return syscall.UtimesNano(path, ts)
}
func (*Impl) Wait4(pid int, wstatus *syscall.WaitStatus, options int, rusage *syscall.Rusage) (wpid int, err error) {
	return syscall.Wait4(pid, wstatus, options, rusage)
}
func (*Impl) Write(fd int, p []byte) (n int, err error) {
	return syscall.Write(fd, p)
}
