// Code generated by a tool. DO NOT EDIT.

// Package gzip provides a mockable wrapper for compress/gzip.
package gzip

import (
	gzip "compress/gzip"
	io "io"
)

var _ Interface = &Impl{}
var _ = gzip.NewReader

type Interface interface {
	NewReader(r io.Reader) (*gzip.Reader, error)
	NewWriter(w io.Writer) *gzip.Writer
	NewWriterLevel(w io.Writer, level int) (*gzip.Writer, error)
}

type Impl struct{}

func (*Impl) NewReader(r io.Reader) (*gzip.Reader, error) {
	return gzip.NewReader(r)
}
func (*Impl) NewWriter(w io.Writer) *gzip.Writer {
	return gzip.NewWriter(w)
}
func (*Impl) NewWriterLevel(w io.Writer, level int) (*gzip.Writer, error) {
	return gzip.NewWriterLevel(w, level)
}
