// Code generated by a tool. DO NOT EDIT.

// Package lzw provides a mockable wrapper for compress/lzw.
package lzw

import (
	lzw "compress/lzw"
	io "io"
)

var _ Interface = &Impl{}
var _ = lzw.NewReader

type Interface interface {
	NewReader(r io.Reader, order lzw.Order, litWidth int) io.ReadCloser
	NewWriter(w io.Writer, order lzw.Order, litWidth int) io.WriteCloser
}

type Impl struct{}

func (*Impl) NewReader(r io.Reader, order lzw.Order, litWidth int) io.ReadCloser {
	return lzw.NewReader(r, order, litWidth)
}
func (*Impl) NewWriter(w io.Writer, order lzw.Order, litWidth int) io.WriteCloser {
	return lzw.NewWriter(w, order, litWidth)
}
