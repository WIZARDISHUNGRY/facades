// Code generated by a tool. DO NOT EDIT.

// Package iotest provides a mockable wrapper for testing/iotest.
package iotest

import (
	io "io"
	iotest "testing/iotest"
)

var _ Interface = &Impl{}
var _ = iotest.DataErrReader

type Interface interface {
	DataErrReader(r io.Reader) io.Reader
	ErrReader(err error) io.Reader
	HalfReader(r io.Reader) io.Reader
	NewReadLogger(prefix string, r io.Reader) io.Reader
	NewWriteLogger(prefix string, w io.Writer) io.Writer
	OneByteReader(r io.Reader) io.Reader
	TestReader(r io.Reader, content []byte) error
	TimeoutReader(r io.Reader) io.Reader
	TruncateWriter(w io.Writer, n int64) io.Writer
}

type Impl struct{}

func (*Impl) DataErrReader(r io.Reader) io.Reader {
	return iotest.DataErrReader(r)
}
func (*Impl) ErrReader(err error) io.Reader {
	return iotest.ErrReader(err)
}
func (*Impl) HalfReader(r io.Reader) io.Reader {
	return iotest.HalfReader(r)
}
func (*Impl) NewReadLogger(prefix string, r io.Reader) io.Reader {
	return iotest.NewReadLogger(prefix, r)
}
func (*Impl) NewWriteLogger(prefix string, w io.Writer) io.Writer {
	return iotest.NewWriteLogger(prefix, w)
}
func (*Impl) OneByteReader(r io.Reader) io.Reader {
	return iotest.OneByteReader(r)
}
func (*Impl) TestReader(r io.Reader, content []byte) error {
	return iotest.TestReader(r, content)
}
func (*Impl) TimeoutReader(r io.Reader) io.Reader {
	return iotest.TimeoutReader(r)
}
func (*Impl) TruncateWriter(w io.Writer, n int64) io.Writer {
	return iotest.TruncateWriter(w, n)
}
