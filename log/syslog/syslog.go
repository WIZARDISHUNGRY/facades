// Code generated by a tool. DO NOT EDIT.

// Package syslog provides a mockable wrapper for log/syslog.
package syslog

import (
	log "log"
	syslog "log/syslog"
)

var _ Interface = &Impl{}
var _ = syslog.Dial

type Interface interface {
	Dial(network string, raddr string, priority syslog.Priority, tag string) (*syslog.Writer, error)
	New(priority syslog.Priority, tag string) (*syslog.Writer, error)
	NewLogger(p syslog.Priority, logFlag int) (*log.Logger, error)
}

type Impl struct{}

func (*Impl) Dial(network string, raddr string, priority syslog.Priority, tag string) (*syslog.Writer, error) {
	return syslog.Dial(network, raddr, priority, tag)
}
func (*Impl) New(priority syslog.Priority, tag string) (*syslog.Writer, error) {
	return syslog.New(priority, tag)
}
func (*Impl) NewLogger(p syslog.Priority, logFlag int) (*log.Logger, error) {
	return syslog.NewLogger(p, logFlag)
}
