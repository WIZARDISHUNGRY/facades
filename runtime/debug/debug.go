// Code generated by a tool. DO NOT EDIT.

// Package debug provides a mockable wrapper for runtime/debug.
package debug

import (
	debug "runtime/debug"
)

var _ Interface = &Impl{}
var _ = debug.FreeOSMemory

type Interface interface {
	FreeOSMemory()
	PrintStack()
	ReadBuildInfo() (info *debug.BuildInfo, ok bool)
	ReadGCStats(stats *debug.GCStats)
	SetGCPercent(percent int) int
	SetMaxStack(bytes int) int
	SetMaxThreads(threads int) int
	SetPanicOnFault(enabled bool) bool
	SetTraceback(level string)
	Stack() []byte
	WriteHeapDump(fd uintptr)
}

type Impl struct{}

func (*Impl) FreeOSMemory() {
	debug.FreeOSMemory()
}
func (*Impl) PrintStack() {
	debug.PrintStack()
}
func (*Impl) ReadBuildInfo() (info *debug.BuildInfo, ok bool) {
	return debug.ReadBuildInfo()
}
func (*Impl) ReadGCStats(stats *debug.GCStats) {
	debug.ReadGCStats(stats)
}
func (*Impl) SetGCPercent(percent int) int {
	return debug.SetGCPercent(percent)
}
func (*Impl) SetMaxStack(bytes int) int {
	return debug.SetMaxStack(bytes)
}
func (*Impl) SetMaxThreads(threads int) int {
	return debug.SetMaxThreads(threads)
}
func (*Impl) SetPanicOnFault(enabled bool) bool {
	return debug.SetPanicOnFault(enabled)
}
func (*Impl) SetTraceback(level string) {
	debug.SetTraceback(level)
}
func (*Impl) Stack() []byte {
	return debug.Stack()
}
func (*Impl) WriteHeapDump(fd uintptr) {
	debug.WriteHeapDump(fd)
}
