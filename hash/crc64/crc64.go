// Code generated by a tool. DO NOT EDIT.

// Package crc64 provides a mockable wrapper for hash/crc64.
package crc64

import (
	hash "hash"
	crc64 "hash/crc64"
)

var _ Interface = &Impl{}
var _ = crc64.Checksum

type Interface interface {
	Checksum(data []byte, tab *crc64.Table) uint64
	MakeTable(poly uint64) *crc64.Table
	New(tab *crc64.Table) hash.Hash64
	Update(crc uint64, tab *crc64.Table, p []byte) uint64
}

type Impl struct{}

func (*Impl) Checksum(data []byte, tab *crc64.Table) uint64 {
	return crc64.Checksum(data, tab)
}
func (*Impl) MakeTable(poly uint64) *crc64.Table {
	return crc64.MakeTable(poly)
}
func (*Impl) New(tab *crc64.Table) hash.Hash64 {
	return crc64.New(tab)
}
func (*Impl) Update(crc uint64, tab *crc64.Table, p []byte) uint64 {
	return crc64.Update(crc, tab, p)
}
