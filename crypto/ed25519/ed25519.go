// Code generated by a tool. DO NOT EDIT.

// Package ed25519 provides a mockable wrapper for crypto/ed25519.
package ed25519

import (
	ed25519 "crypto/ed25519"
	io "io"
)

var _ Interface = &Impl{}
var _ = ed25519.GenerateKey

type Interface interface {
	GenerateKey(rand io.Reader) (ed25519.PublicKey, ed25519.PrivateKey, error)
	NewKeyFromSeed(seed []byte) ed25519.PrivateKey
	Sign(privateKey ed25519.PrivateKey, message []byte) []byte
	Verify(publicKey ed25519.PublicKey, message []byte, sig []byte) bool
}

type Impl struct{}

func (*Impl) GenerateKey(rand io.Reader) (ed25519.PublicKey, ed25519.PrivateKey, error) {
	return ed25519.GenerateKey(rand)
}
func (*Impl) NewKeyFromSeed(seed []byte) ed25519.PrivateKey {
	return ed25519.NewKeyFromSeed(seed)
}
func (*Impl) Sign(privateKey ed25519.PrivateKey, message []byte) []byte {
	return ed25519.Sign(privateKey, message)
}
func (*Impl) Verify(publicKey ed25519.PublicKey, message []byte, sig []byte) bool {
	return ed25519.Verify(publicKey, message, sig)
}
