// Code generated by a tool. DO NOT EDIT.

// Package ascii85 provides a mockable wrapper for encoding/ascii85.
package ascii85

import (
	ascii85 "encoding/ascii85"
	io "io"
)

var _ Interface = &Impl{}
var _ = ascii85.Decode

type Interface interface {
	Decode(dst []byte, src []byte, flush bool) (ndst int, nsrc int, err error)
	Encode(dst []byte, src []byte) int
	MaxEncodedLen(n int) int
	NewDecoder(r io.Reader) io.Reader
	NewEncoder(w io.Writer) io.WriteCloser
}

type Impl struct{}

func (*Impl) Decode(dst []byte, src []byte, flush bool) (ndst int, nsrc int, err error) {
	return ascii85.Decode(dst, src, flush)
}
func (*Impl) Encode(dst []byte, src []byte) int {
	return ascii85.Encode(dst, src)
}
func (*Impl) MaxEncodedLen(n int) int {
	return ascii85.MaxEncodedLen(n)
}
func (*Impl) NewDecoder(r io.Reader) io.Reader {
	return ascii85.NewDecoder(r)
}
func (*Impl) NewEncoder(w io.Writer) io.WriteCloser {
	return ascii85.NewEncoder(w)
}
