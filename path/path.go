// Code generated by a tool. DO NOT EDIT.

// Package path provides a mockable wrapper for path.
package path

import (
	path "path"
)

var _ Interface = &Impl{}
var _ = path.Base

type Interface interface {
	Base(path string) string
	Clean(path string) string
	Dir(path string) string
	Ext(path string) string
	IsAbs(path string) bool
	Join(elem ...string) string
	Match(pattern string, name string) (matched bool, err error)
	Split(path string) (dir string, file string)
}

type Impl struct{}

func (*Impl) Base(path_v string) string {
	return path.Base(path_v)
}
func (*Impl) Clean(path_v string) string {
	return path.Clean(path_v)
}
func (*Impl) Dir(path_v string) string {
	return path.Dir(path_v)
}
func (*Impl) Ext(path_v string) string {
	return path.Ext(path_v)
}
func (*Impl) IsAbs(path_v string) bool {
	return path.IsAbs(path_v)
}
func (*Impl) Join(elem ...string) string {
	return path.Join(elem...)
}
func (*Impl) Match(pattern string, name string) (matched bool, err error) {
	return path.Match(pattern, name)
}
func (*Impl) Split(path_v string) (dir string, file string) {
	return path.Split(path_v)
}
