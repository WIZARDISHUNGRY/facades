// Code generated by a tool. DO NOT EDIT.

// Package pprof provides a mockable wrapper for net/http/pprof.
package pprof

import (
	http "net/http"
	pprof "net/http/pprof"
)

var _ Interface = &Impl{}
var _ = pprof.Cmdline

type Interface interface {
	Cmdline(w http.ResponseWriter, r *http.Request)
	Handler(name string) http.Handler
	Index(w http.ResponseWriter, r *http.Request)
	Profile(w http.ResponseWriter, r *http.Request)
	Symbol(w http.ResponseWriter, r *http.Request)
	Trace(w http.ResponseWriter, r *http.Request)
}

type Impl struct{}

func (*Impl) Cmdline(w http.ResponseWriter, r *http.Request) {
	pprof.Cmdline(w, r)
}
func (*Impl) Handler(name string) http.Handler {
	return pprof.Handler(name)
}
func (*Impl) Index(w http.ResponseWriter, r *http.Request) {
	pprof.Index(w, r)
}
func (*Impl) Profile(w http.ResponseWriter, r *http.Request) {
	pprof.Profile(w, r)
}
func (*Impl) Symbol(w http.ResponseWriter, r *http.Request) {
	pprof.Symbol(w, r)
}
func (*Impl) Trace(w http.ResponseWriter, r *http.Request) {
	pprof.Trace(w, r)
}
