// Code generated by a tool. DO NOT EDIT.

// Package httputil provides a mockable wrapper for net/http/httputil.
package httputil

import (
	bufio "bufio"
	io "io"
	net "net"
	http "net/http"
	httputil "net/http/httputil"
	url "net/url"
)

var _ Interface = &Impl{}
var _ = httputil.DumpRequest

type Interface interface {
	DumpRequest(req *http.Request, body bool) ([]byte, error)
	DumpRequestOut(req *http.Request, body bool) ([]byte, error)
	DumpResponse(resp *http.Response, body bool) ([]byte, error)
	NewChunkedReader(r io.Reader) io.Reader
	NewChunkedWriter(w io.Writer) io.WriteCloser
	NewClientConn(c net.Conn, r *bufio.Reader) *httputil.ClientConn
	NewProxyClientConn(c net.Conn, r *bufio.Reader) *httputil.ClientConn
	NewServerConn(c net.Conn, r *bufio.Reader) *httputil.ServerConn
	NewSingleHostReverseProxy(target *url.URL) *httputil.ReverseProxy
}

type Impl struct{}

func (*Impl) DumpRequest(req *http.Request, body bool) ([]byte, error) {
	return httputil.DumpRequest(req, body)
}
func (*Impl) DumpRequestOut(req *http.Request, body bool) ([]byte, error) {
	return httputil.DumpRequestOut(req, body)
}
func (*Impl) DumpResponse(resp *http.Response, body bool) ([]byte, error) {
	return httputil.DumpResponse(resp, body)
}
func (*Impl) NewChunkedReader(r io.Reader) io.Reader {
	return httputil.NewChunkedReader(r)
}
func (*Impl) NewChunkedWriter(w io.Writer) io.WriteCloser {
	return httputil.NewChunkedWriter(w)
}
func (*Impl) NewClientConn(c net.Conn, r *bufio.Reader) *httputil.ClientConn {
	return httputil.NewClientConn(c, r)
}
func (*Impl) NewProxyClientConn(c net.Conn, r *bufio.Reader) *httputil.ClientConn {
	return httputil.NewProxyClientConn(c, r)
}
func (*Impl) NewServerConn(c net.Conn, r *bufio.Reader) *httputil.ServerConn {
	return httputil.NewServerConn(c, r)
}
func (*Impl) NewSingleHostReverseProxy(target *url.URL) *httputil.ReverseProxy {
	return httputil.NewSingleHostReverseProxy(target)
}
