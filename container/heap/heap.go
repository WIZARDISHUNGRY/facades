// Code generated by a tool. DO NOT EDIT.

// Package heap provides a mockable wrapper for container/heap.
package heap

import (
	heap "container/heap"
)

var _ Interface = &Impl{}
var _ = heap.Fix

type Interface interface {
	Fix(h heap.Interface, i int)
	Init(h heap.Interface)
	Pop(h heap.Interface) any
	Push(h heap.Interface, x any)
	Remove(h heap.Interface, i int) any
}

type Impl struct{}

func (*Impl) Fix(h heap.Interface, i int) {
	heap.Fix(h, i)
}
func (*Impl) Init(h heap.Interface) {
	heap.Init(h)
}
func (*Impl) Pop(h heap.Interface) any {
	return heap.Pop(h)
}
func (*Impl) Push(h heap.Interface, x any) {
	heap.Push(h, x)
}
func (*Impl) Remove(h heap.Interface, i int) any {
	return heap.Remove(h, i)
}
