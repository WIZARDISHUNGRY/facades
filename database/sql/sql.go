// Code generated by a tool. DO NOT EDIT.

// Package sql provides a mockable wrapper for database/sql.
package sql

import (
	sql "database/sql"
	driver "database/sql/driver"
)

var _ Interface = &Impl{}
var _ = sql.Drivers

type Interface interface {
	Drivers() []string
	Named(name string, value any) sql.NamedArg
	Open(driverName string, dataSourceName string) (*sql.DB, error)
	OpenDB(c driver.Connector) *sql.DB
	Register(name string, driver driver.Driver)
}

type Impl struct{}

func (*Impl) Drivers() []string {
	return sql.Drivers()
}
func (*Impl) Named(name string, value any) sql.NamedArg {
	return sql.Named(name, value)
}
func (*Impl) Open(driverName string, dataSourceName string) (*sql.DB, error) {
	return sql.Open(driverName, dataSourceName)
}
func (*Impl) OpenDB(c driver.Connector) *sql.DB {
	return sql.OpenDB(c)
}
func (*Impl) Register(name string, driver driver.Driver) {
	sql.Register(name, driver)
}
