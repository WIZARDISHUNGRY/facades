// Code generated by a tool. DO NOT EDIT.

// Package fmt provides a mockable wrapper for fmt.
package fmt

import (
	fmt "fmt"
	io "io"
)

var _ Interface = &Impl{}
var _ = fmt.Errorf

type Interface interface {
	Errorf(format string, a ...any) error
	Fprint(w io.Writer, a ...any) (n int, err error)
	Fprintf(w io.Writer, format string, a ...any) (n int, err error)
	Fprintln(w io.Writer, a ...any) (n int, err error)
	Fscan(r io.Reader, a ...any) (n int, err error)
	Fscanf(r io.Reader, format string, a ...any) (n int, err error)
	Fscanln(r io.Reader, a ...any) (n int, err error)
	Print(a ...any) (n int, err error)
	Printf(format string, a ...any) (n int, err error)
	Println(a ...any) (n int, err error)
	Scan(a ...any) (n int, err error)
	Scanf(format string, a ...any) (n int, err error)
	Scanln(a ...any) (n int, err error)
	Sprint(a ...any) string
	Sprintf(format string, a ...any) string
	Sprintln(a ...any) string
	Sscan(str string, a ...any) (n int, err error)
	Sscanf(str string, format string, a ...any) (n int, err error)
	Sscanln(str string, a ...any) (n int, err error)
}

type Impl struct{}

func (*Impl) Errorf(format string, a ...any) error {
	return fmt.Errorf(format, a...)
}
func (*Impl) Fprint(w io.Writer, a ...any) (n int, err error) {
	return fmt.Fprint(w, a...)
}
func (*Impl) Fprintf(w io.Writer, format string, a ...any) (n int, err error) {
	return fmt.Fprintf(w, format, a...)
}
func (*Impl) Fprintln(w io.Writer, a ...any) (n int, err error) {
	return fmt.Fprintln(w, a...)
}
func (*Impl) Fscan(r io.Reader, a ...any) (n int, err error) {
	return fmt.Fscan(r, a...)
}
func (*Impl) Fscanf(r io.Reader, format string, a ...any) (n int, err error) {
	return fmt.Fscanf(r, format, a...)
}
func (*Impl) Fscanln(r io.Reader, a ...any) (n int, err error) {
	return fmt.Fscanln(r, a...)
}
func (*Impl) Print(a ...any) (n int, err error) {
	return fmt.Print(a...)
}
func (*Impl) Printf(format string, a ...any) (n int, err error) {
	return fmt.Printf(format, a...)
}
func (*Impl) Println(a ...any) (n int, err error) {
	return fmt.Println(a...)
}
func (*Impl) Scan(a ...any) (n int, err error) {
	return fmt.Scan(a...)
}
func (*Impl) Scanf(format string, a ...any) (n int, err error) {
	return fmt.Scanf(format, a...)
}
func (*Impl) Scanln(a ...any) (n int, err error) {
	return fmt.Scanln(a...)
}
func (*Impl) Sprint(a ...any) string {
	return fmt.Sprint(a...)
}
func (*Impl) Sprintf(format string, a ...any) string {
	return fmt.Sprintf(format, a...)
}
func (*Impl) Sprintln(a ...any) string {
	return fmt.Sprintln(a...)
}
func (*Impl) Sscan(str string, a ...any) (n int, err error) {
	return fmt.Sscan(str, a...)
}
func (*Impl) Sscanf(str string, format string, a ...any) (n int, err error) {
	return fmt.Sscanf(str, format, a...)
}
func (*Impl) Sscanln(str string, a ...any) (n int, err error) {
	return fmt.Sscanln(str, a...)
}
