// Code generated by a tool. DO NOT EDIT.

// Package constraint provides a mockable wrapper for go/build/constraint.
package constraint

import (
	constraint "go/build/constraint"
)

var _ Interface = &Impl{}
var _ = constraint.IsGoBuild

type Interface interface {
	IsGoBuild(line string) bool
	IsPlusBuild(line string) bool
	Parse(line string) (constraint.Expr, error)
	PlusBuildLines(x constraint.Expr) ([]string, error)
}

type Impl struct{}

func (*Impl) IsGoBuild(line string) bool {
	return constraint.IsGoBuild(line)
}
func (*Impl) IsPlusBuild(line string) bool {
	return constraint.IsPlusBuild(line)
}
func (*Impl) Parse(line string) (constraint.Expr, error) {
	return constraint.Parse(line)
}
func (*Impl) PlusBuildLines(x constraint.Expr) ([]string, error) {
	return constraint.PlusBuildLines(x)
}
